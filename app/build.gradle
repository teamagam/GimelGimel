apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {

    def globalConfiguration = rootProject.ext

    compileSdkVersion globalConfiguration.androidCompileSdkVersion
    buildToolsVersion globalConfiguration.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion
        applicationId globalConfiguration.androidApplicationId
        versionCode globalConfiguration.androidVersionCode
        versionName globalConfiguration.androidVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'ggapp'
            keyPassword 'teamagam1'
            storePassword 'teamagam1'
            storeFile file('../keystores/gimelgimel.jks')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"

            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = false
        }
    }

    dataBinding {
        enabled = true
    }

    /* ESRI recommended packaging options to avoid build errors */
    packagingOptions {
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

}

dependencies {
    def dependencies = rootProject.ext.dependencies
    def testDependencies = rootProject.ext.testDependencies

    /*ESRI*/
    compile dependencies.esri

    compile project(path: ':domain')
    compile project(path: ':data')

    /* android design */
    compile dependencies.recyclerview
    compile dependencies.androidDesign
    compile dependencies.slideUpPannel
    compile dependencies.androidSupportV4
    compile dependencies.multiDex
    compile dependencies.pagerSlidingTabStrip

    /* rx */
    compile dependencies.rxAndroid

    /* Dagger 2 */
    compile dependencies.dagger
    apt dependencies.daggerCompiler
    provided dependencies.javaxAnnotations
    provided dependencies.autoFactoryCompiler

    /* Butterknife */
    compile dependencies.butterKnife
    apt dependencies.butterKnifeCompiler

    /* Glide */
    compile dependencies.glide

    /* log4j */
    compile dependencies.log4jLogging
    compile dependencies.log4jAppache

    /* Circular Progress */
    compile dependencies.circularProgress

    /* ImageViewZoom */
    compile dependencies.imageViewZoom

    /* Test */
    testCompile testDependencies.junit
    testCompile testDependencies.roboelectric
    testCompile testDependencies.mockito

    /* Android Test */
    androidTestCompile testDependencies.robotium
    androidTestCompile 'org.testng:testng:6.9.6'
}

android {
// Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}


